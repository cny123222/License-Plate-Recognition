# 数据集配置
Train:
  dataset:
    name: SimpleDataSet
    data_dir: ../  # 数据集的根路径
    label_file_list: ["../CCPD/cropped/train_labels_cleaned.csv"]  # 训练集的 CSV 文件路径
    delimiter: ","
    transforms:  # 修正为列表形式
      - DecodeImage:  # 解码图像
          img_mode: BGR
          to_rgb: True
          channel_first: True
      - RecResizeImg:  # 调整图片大小
          image_shape: [3, 32, 320]
      # - RecAug: {}  # 数据增强
      - NormalizeImage:  # 归一化
          std: [0.5, 0.5, 0.5]
          mean: [0.5, 0.5, 0.5]
          scale: 0.007843
      - ToCHWImage: {}  # 转换为 [C, H, W] 格式
      - KeepKeys:
          keep_keys: ['image', 'label']
  loader:
    shuffle: true
    drop_last: true
    batch_size_per_card: 32
    num_workers: 4

Eval:
  dataset:
    name: SimpleDataSet
    data_dir: ../ # 数据集的根路径
    label_file_list: ["../CCPD/cropped/val_labels_cleaned.csv"]  # 验证集的 CSV 文件路径
    delimiter: ","
    transforms:  # 修正为列表形式
      - DecodeImage:  # 解码图像
          img_mode: BGR
          to_rgb: True
          channel_first: True
      - RecResizeImg:  # 调整图片大小
          image_shape: [3, 32, 320]
      - NormalizeImage:  # 归一化
          std: [0.5, 0.5, 0.5]
          mean: [0.5, 0.5, 0.5]
          scale: 0.007843
      - ToCHWImage: {}  # 转换为 [C, H, W] 格式
      - KeepKeys:
          keep_keys: ['image', 'label']
  loader:
    shuffle: false
    drop_last: false
    batch_size_per_card: 32
    num_workers: 4

# 全局设置
Global:
  image_shape: [3, 32, 320] 
  use_gpu: false  # Mac 上无法使用 GPU，可以利用多线程 CPU 加速
  epoch_num: 30  # 总训练轮数
  log_smooth_window: 20  # 日志滑动窗口
  print_batch_step: 5  # 每 5 个 batch 输出一次日志
  save_model_dir: ./ocr_output  # 保存模型的路径
  save_epoch_step: 5  # 每 5 个 epoch 保存一次模型
  eval_batch_step: [2000, 2000]  # 每 2000 个 batch 评估一次
  character_dict_path: ./chars.txt  # 字符集路径
  character_type: ch  # 表示中文字符集
  max_text_length: 10  # 车牌最大长度
  pretrained_model: null  # 不加载预训练模型
  checkpoints: null
  save_inference_dir: ./inference  # 保存推理模型的路径
  use_space_char: false  # 不使用空格字符

Architecture:
  model_type: rec
  algorithm: CRNN  # 使用 CRNN 结构进行识别
  Transform: null
  Backbone:
    name: MobileNetV3  # 主干网络
    scale: 0.5
    model_name: small
  Neck:
    name: SequenceEncoder
    encoder_type: rnn
    hidden_size: 48
  Head:
    name: CTCHead
    fc_decay: 0.00001

PostProcess:
  name: CTCLabelDecode
  character_dict_path: ./chars.txt  # 字符集文件路径

Loss:
  name: CTCLoss  # CTC 损失函数

Optimizer:
  name: Adam
  beta1: 0.9
  beta2: 0.999
  lr:
    learning_rate: 0.001  # 初始学习率
  regularizer:
    name: L2
    factor: 0.00001  # 权重衰减因子

Metric:
  name: RecMetric
  main_indicator: acc  # 主要评估指标为准确率